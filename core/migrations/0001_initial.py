# Generated by Django 3.2 on 2022-06-12 15:16

from django.db import migrations, models
import django.db.models.deletion
import tinymce.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Article',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=150, verbose_name='Titre')),
                ('slug', models.SlugField()),
                ('aperçu', models.CharField(blank=True, max_length=300, null=True, verbose_name='aperçu')),
                ('chapo', models.CharField(blank=True, max_length=300, null=True, verbose_name='chapô ')),
                ('quote', models.CharField(blank=True, max_length=300, null=True, verbose_name='phrase mise en avant ')),
                ('texte_haut', tinymce.models.HTMLField(blank=True, null=True, verbose_name='texte haut')),
                ('texte_bas', tinymce.models.HTMLField(blank=True, null=True, verbose_name='texte bas')),
                ('card_img', models.ImageField(upload_to='images/')),
                ('banner', models.ImageField(upload_to='images/')),
                ('publish', models.BooleanField(default=True)),
                ('actif', models.BooleanField(default=True)),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Date de Création')),
                ('updated', models.DateTimeField(auto_now=True, verbose_name='Date de dernière mise à jour')),
            ],
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Nom du DAS')),
                ('title', models.CharField(blank=True, max_length=100, null=True, verbose_name='Petit text')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Description')),
                ('icon', models.FileField(blank=True, null=True, upload_to='images/categories')),
            ],
            options={
                'verbose_name': 'Catégorie',
            },
        ),
        migrations.CreateModel(
            name='Client',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('logo', models.ImageField(upload_to='images/clients')),
            ],
        ),
        migrations.CreateModel(
            name='Contact',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Nom complet')),
                ('phone', models.CharField(max_length=25, verbose_name='Téléphone')),
                ('email', models.EmailField(blank=True, max_length=254, null=True, verbose_name='Email')),
                ('subject', models.CharField(blank=True, max_length=50, null=True, verbose_name='Sujet')),
                ('message', models.TextField(blank=True, null=True, verbose_name='Message')),
                ('date_sent', models.DateTimeField(auto_now_add=True, verbose_name='Date')),
            ],
            options={
                'verbose_name': 'Formulaire de contact',
                'verbose_name_plural': 'Formulaire de contact',
                'ordering': ('id',),
            },
        ),
        migrations.CreateModel(
            name='Fonctionalite',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100)),
                ('description', models.TextField(blank=True, null=True)),
                ('priority', models.IntegerField(blank=True, null=True, verbose_name='ordre / priorité')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Date de Création')),
                ('updated', models.DateTimeField(auto_now=True, verbose_name='Date de dernière mise à jour')),
            ],
            options={
                'verbose_name': 'fonctionalite',
                'verbose_name_plural': 'fonctionalites',
                'ordering': ('id',),
            },
        ),
        migrations.CreateModel(
            name='Invoice',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('client', models.CharField(max_length=300, verbose_name='Client')),
                ('client_rc', models.CharField(max_length=300, verbose_name='RC Client')),
                ('client_nif', models.CharField(max_length=300, verbose_name='Nif Client')),
                ('client_art', models.CharField(max_length=300, verbose_name="Numéro d'article du client")),
                ('client_adresse', models.CharField(max_length=300, verbose_name='Adresse Client')),
                ('client_phone', models.CharField(max_length=300, verbose_name='Téléphone Client')),
                ('client_email', models.EmailField(max_length=300, verbose_name='Email Client')),
                ('invoice_number', models.IntegerField(verbose_name='Numéro de facture')),
                ('invioce_date', models.DateField(blank=True, null=True, verbose_name='Date ')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Crée')),
                ('updated', models.DateTimeField(auto_now=True, verbose_name='Modifié')),
                ('note', models.TextField(blank=True, null=True, verbose_name='Note')),
                ('paid', models.BooleanField(default=False, verbose_name='Payé')),
                ('discount', models.DecimalField(decimal_places=2, default=0, max_digits=10, verbose_name='Réduction')),
            ],
        ),
        migrations.CreateModel(
            name='Offre',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100, verbose_name='Offre')),
                ('description', models.TextField(blank=True, null=True)),
                ('priority', models.IntegerField(blank=True, null=True, verbose_name='ordre / priorité')),
                ('price_month', models.DecimalField(blank=True, decimal_places=0, max_digits=20, null=True)),
                ('price_year', models.DecimalField(blank=True, decimal_places=0, max_digits=20, null=True)),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Date de Création')),
                ('updated', models.DateTimeField(auto_now=True, verbose_name='Date de dernière mise à jour')),
            ],
            options={
                'verbose_name': 'offre',
                'verbose_name_plural': 'offres',
                'ordering': ('id',),
            },
        ),
        migrations.CreateModel(
            name='Quote',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.TextField(verbose_name='la citation')),
                ('actif', models.BooleanField(default=True)),
                ('autor', models.CharField(max_length=100, verbose_name='auteur')),
                ('function', models.CharField(max_length=100, verbose_name='Fonction')),
                ('image', models.ImageField(upload_to='images/')),
            ],
        ),
        migrations.CreateModel(
            name='Solution',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='sous catégorie')),
                ('title', models.TextField(blank=True, null=True, verbose_name='Petit text')),
                ('description', tinymce.models.HTMLField(blank=True, null=True, verbose_name='Déscription du produit')),
                ('icon', models.ImageField(blank=True, null=True, upload_to='images/categories')),
            ],
        ),
        migrations.CreateModel(
            name='Status',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('included', models.BooleanField(default=False, verbose_name="inclu dans l'offre")),
                ('quantity', models.CharField(blank=True, max_length=100, null=True, verbose_name='quantité')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Date de Création')),
                ('updated', models.DateTimeField(auto_now=True, verbose_name='Date de dernière mise à jour')),
                ('fonctionalite', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='status', to='core.fonctionalite', verbose_name='fonctionalite')),
                ('offre', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='core.offre', verbose_name='offre')),
            ],
            options={
                'verbose_name': 'status',
                'verbose_name_plural': 'statuss',
                'ordering': ('id',),
            },
        ),
        migrations.CreateModel(
            name='Service',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Nom du Service')),
                ('slug', models.SlugField()),
                ('title', models.CharField(max_length=300, verbose_name='Petit text')),
                ('photo', models.ImageField(blank=True, null=True, upload_to='images/services', verbose_name='img 2')),
                ('image', models.FileField(blank=True, null=True, upload_to='images/services/')),
                ('description', tinymce.models.HTMLField(blank=True, null=True, verbose_name='Déscription du produit')),
                ('icon', models.CharField(max_length=100, verbose_name='nom de l icon du site https://feathericons.com/')),
                ('priority', models.IntegerField(verbose_name='ordre / priorité')),
                ('to_home_page', models.BooleanField(default=False, verbose_name="ajouter a la page d'accueil")),
                ('to_footer', models.BooleanField(default=False, verbose_name='ajouter au footer')),
                ('actif', models.BooleanField(default=True)),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Date de Création')),
                ('updated', models.DateTimeField(auto_now=True, verbose_name='Date de dernière mise à jour')),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.category', verbose_name='DAS categorie')),
            ],
        ),
        migrations.AddField(
            model_name='offre',
            name='service',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='core.service'),
        ),
        migrations.CreateModel(
            name='InvoiceItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.CharField(max_length=300, verbose_name='Description')),
                ('price', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Prix')),
                ('quantity', models.PositiveIntegerField(default=1, verbose_name='Quantité')),
                ('invoice', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='items', to='core.invoice', verbose_name='Facture')),
            ],
        ),
        migrations.AddField(
            model_name='fonctionalite',
            name='service',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='core.service'),
        ),
    ]
